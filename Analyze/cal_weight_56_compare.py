node_Scale_1 = [2, 4, 6, 7, 11, 15, 16, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 44, 45, 52, 53, 54, 56, 58, 65, 67, 68, 69, 73, 80, 81, 85, 89, 90, 93, 94, 95, 96, 99, 100, 101, 102, 103, 104, 116, 118, 119, 126, 127, 128, 130, 132, 139, 141, 142, 147]
node_Scale_1_weight = [0.8545643303425922, 0.1442527515795393, 0.17117247389964554, 0.3391257175422132, 0.3738676334412671, 0.3525238257459481, 0.16937968586452326, 0.7759208934700811, 0.3284923363836528, 0.7413955355402647, 0.45764814382103547, 0.3538270176482066, 0.41079441267990496, 0.9680071594305228, 0.23720553962788488, 0.3343565646738217, 0.2856218248819849, 0.4480275343408104, 0.14987660156335547, 0.30679502443444523, 0.16190660865388476, 0.2640020831435201, 0.9307927659463068, 0.8062595883276784, 0.4356189463327665, 0.5380455565665159, 0.6315794753450175, 0.4891569312707981, 0.543616304112317, 0.16025529590588633, 0.37198489486303454, 0.46926876801748074, 0.3133104719671893, 0.27209325496472936, 0.8678697207184505, 0.4188509897088933, 0.7984797267568189, 0.5255087756364176, 0.45633536722620116, 0.6165476523480479, 0.7188323863515735, 0.34560551760939345, 0.3640638856463129, 0.3597837811600703, 0.9867944893566978, 0.4520636802151584, 0.27627098031225694, 0.29471859705305953, 0.3732061290622933, 0.40564293213550895, 0.9814972629421294, 0.808911831942723, 0.5011733968910698, 0.4196133748839729, 0.7231361777530062, 0.6453075373155458]
node_select = [2, 11, 19, 21, 22, 26, 27, 38, 42, 44, 46, 51, 56, 57, 58, 59, 60, 65, 67, 68, 69, 73, 76, 81, 85, 86, 88, 93, 94, 95, 96, 99, 100, 101, 103, 104, 110, 114, 116, 118, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 141, 142, 143, 147]
node_select_weight = [0.8545643303425922, 0.3738676334412671, 0.7759208934700811, 0.7413955355402647, 0.45764814382103547, 0.41079441267990496, 0.9680071594305228, 0.40692397564760274, 0.9717862460704427, 0.4480275343408104, 0.36322192722890106, 1.0, 0.9307927659463068, 0.9747787776453807, 0.8062595883276784, 0.7754331111186195, 0.46461612710237293, 0.4356189463327665, 0.5380455565665159, 0.6315794753450175, 0.4891569312707981, 0.543616304112317, 0.912885944093315, 0.37198489486303454, 0.46926876801748074, 0.44446705945079945, 0.5107738204689841, 0.8678697207184505, 0.4188509897088933, 0.7984797267568189, 0.5255087756364176, 0.45633536722620116, 0.6165476523480479, 0.7188323863515735, 0.3640638856463129, 0.3597837811600703, 0.38892243163443396, 0.3628412652987894, 0.9867944893566978, 0.4520636802151584, 0.8615818506539313, 0.3732061290622933, 0.40564293213550895, 0.5447368846351303, 0.9814972629421294, 0.9088637466232586, 0.808911831942723, 0.8027642242926524, 0.5023840962217965, 0.603037307793937, 0.39868809229961555, 0.5011733968910698, 0.4196133748839729, 0.7231361777530062, 0.4555119980990426, 0.6453075373155458]
import matplotlib.pyplot as plt
import numpy as np

# 找出Scale-1和Select之间的重合节点
common_nodes = sorted(set(node_Scale_1) & set(node_select))

# 找出Scale-1和Select之间的非重合节点
unique_nodes_scale_1 = sorted(set(node_Scale_1) - set(node_select))
unique_nodes_select = sorted(set(node_select) - set(node_Scale_1))

# 提取重合节点的权重值
common_weights = [node_Scale_1_weight[node_Scale_1.index(node)] for node in common_nodes]

# 提取非重合节点的权重值
unique_scale_1_weights = [node_Scale_1_weight[node_Scale_1.index(node)] for node in unique_nodes_scale_1]
unique_select_weights = [node_select_weight[node_select.index(node)] for node in unique_nodes_select]

# 创建柱状图
plt.figure(figsize=(12, 6))

# 绘制共同节点的柱状图
plt.bar(np.arange(len(common_nodes)), common_weights, color='r', alpha=0.5, label='Common Nodes')

# 绘制非重合节点的柱状图
plt.bar(np.arange(len(unique_nodes_scale_1)) + len(common_nodes), unique_scale_1_weights, color='royalblue', alpha=0.5, label='Unique Scale-1')
plt.bar(np.arange(len(unique_nodes_select)) + len(common_nodes) + len(unique_nodes_scale_1), unique_select_weights, color='grey', alpha=0.5, label='Unique Select')

# 设置x轴标签和标题
all_nodes = common_nodes + unique_nodes_scale_1 + unique_nodes_select
all_weights = common_weights + unique_scale_1_weights + unique_select_weights
plt.xlabel('Node Index')
plt.ylabel('Node Weight')
plt.title('Comparison of Node Weights')
plt.xticks(np.arange(len(all_nodes)), all_nodes)

# 添加图例
plt.legend()
plt.xticks(rotation=90)
# 显示图形
plt.show()
